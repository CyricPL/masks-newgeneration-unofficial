:root {
  --actor-gradient: linear-gradient(
    to bottom,
    #3179cd 0%,
    #9cb1a5 80%,
    #ffeb98 100%
  );
  --primary-text-color: #ffffff;
  --secondary-text-color: #000000;
  --interactive-bg-color: #1e528f;
  --interactive-bg-hover-color: #173f6e;
  --stats-secondary-bg-color: rgba(0, 0, 0, 0.25);
  --option-bg-color: #683b47;
  --tabs-border-color: #ffeb98;
  --tab-bg-active-color: #ffeb98;
  --input-bg-color: rgb(255 255 255 / 36%);
  --tox-edit-area-bg-color: rgba(255, 255, 255, 0.5);
  --resource-masks-border-color: #bcc8de;
  --custom-resource-border-color: #ffffff;
  --cell-title-border-color: #b0c4de;
  --window-bg-image: url("/modules/masks-newgeneration-sheets/assets/skyline-old.webp"),
    var(--actor-gradient);
  --window-bg-position: bottom left;
}

.pbta.window-app .window-content {
  color: var(--secondary-text-color);
}

.vtt .pbta .window-header {
  background-color: var(--interactive-bg-color);
}

.pbta.sheet label {
  font-weight: normal;
}
.pbta.sheet .window-content {
  background-image: var(--window-bg-image);
  background-position: var(--window-bg-position);
  background-repeat: repeat-x;
  background-size: auto;
}
.pbta.sheet .tox.tox-tinymce .tox-edit-area__iframe {
  background: var(--tox-edit-area-bg-color);
}
.pbta.sheet .sheet-header__fields {
  grid-column: span 3/span 3;
  grid-template-columns: repeat(3, minmax(0, 1fr));
}
.pbta.sheet .editor-content {
  background: var(--input-bg-color);
  color: var(--secondary-text-color);
  min-height: 31px;
}
.pbta.sheet .sheet-wrapper .editor-content {
  background: var(--input-bg-color);
  color: var(--secondary-text-color);
  min-height: 31px;
}
.pbta.sheet .cell__wrapper {
  position: relative;
  width: 100%;
}
.pbta.sheet .cell__wrapper > input[type=number] {
  font-size: 18px;
  text-align: center;
  background-color: var(--input-bg-color);
  color: var(--secondary-text-color);
  font-weight: bold;
  margin: 0;
  display: block;
  width: 100%;
}
.pbta.sheet .masks-label-shift img {
  border: none;
  margin-right: 4px;
  height: 20px;
  width: 20px;
}
.pbta.sheet .masks-label-shift select {
  color: var(--primary-text-color);
  font-weight: bold;
  max-width: calc(50% - 2px);
  padding-left: 10px;
}
.pbta.sheet .masks-label-shift select option {
  background-color: var(--option-bg-color);
  color: var(--primary-text-color);
  border-radius: 0px;
}
.pbta.sheet .masks-label-shift select.masks-shift-down {
  background: url("/icons/svg/down.svg") no-repeat -10% var(--stats-secondary-bg-color);
  background-size: contain;
}
.pbta.sheet .masks-label-shift select.masks-shift-up {
  background: url("/icons/svg/up.svg") no-repeat -10% var(--stats-secondary-bg-color);
  background-size: contain;
}
.pbta.sheet .sheet-attributes {
  position: relative;
}
.pbta.sheet .sheet-attributes .cell--stats .stat {
  background: var(--interactive-bg-color);
  color: var(--primary-text-color);
}
.pbta.sheet .sheet-attributes .cell--stats .stat .cell__title {
  color: var(--primary-text-color);
}
.pbta.sheet .sheet-attributes .cell--stats .stat:hover {
  background: var(--interactive-bg-hover-color);
}
.pbta.sheet .cell--LongText,
.pbta.sheet .cell--ListMany,
.pbta.sheet .cell--moves,
.pbta.sheet .cell--Text,
.pbta.sheet .cell--Number {
  padding-top: 5px;
}
.pbta.sheet .cell__title {
  font-style: italic;
  position: relative;
  padding-left: 8px;
  border-bottom: none;
  color: var(--secondary-text-color);
  letter-spacing: 0.05rem;
  font-size: 22px;
}
.pbta.sheet .cell__title::before {
  content: "";
  position: absolute;
  left: 7px;
  top: 0;
  height: 2px;
  width: 100%;
  background-color: var(--cell-title-border-color);
  -webkit-transform: skewX(-15deg);
  -ms-transform: skewX(-15deg);
  transform: skewX(-15deg);
}
.pbta.sheet .cell__title::after {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 4px;
  background-color: var(--cell-title-border-color);
  -webkit-transform: skewX(-15deg);
  -ms-transform: skewX(-15deg);
  transform: skewX(-15deg);
}
.pbta.sheet .tabs {
  border-bottom: 2px solid var(--tabs-border-color);
}
.pbta.sheet .sheet-tabs.tabs > a.item {
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
  font-style: italic;
  background-color: var(--interactive-bg-color);
  color: var(--primary-text-color);
}
.pbta.sheet .sheet-tabs.tabs > a.item.active, .pbta.sheet .sheet-tabs.tabs > a.item.active:hover {
  background-color: var(--tab-bg-active-color);
  color: var(--secondary-text-color);
}
.pbta.sheet .sheet-tabs.tabs > a.item:hover, .pbta.sheet .sheet-tabs.tabs > a.item:focus {
  background-color: var(--interactive-bg-hover-color);
  color: var(--primary-text-color);
  font-weight: bold;
}
.pbta.sheet .sheet-header__fields .view-playbook {
  background: var(--interactive-bg-color);
  color: var(--primary-text-color);
  opacity: 1;
}
.pbta.sheet .sheet-header__fields .view-playbook:hover {
  opacity: 1;
  background: var(--interactive-bg-hover-color);
}

/** NPCs **/
.pbta.sheet.npc .sheet-wrapper .sheet-header {
  margin-bottom: 0px;
}
.pbta.sheet.npc .sheet-attributes {
  grid-column: span 5;
  grid-template-columns: repeat(5, minmax(0, 1fr));
}
.pbta.sheet.npc .sheet-attributes .cell-npc-text {
  grid-column: span 2;
}
.pbta.sheet.npc .sheet-attributes .cell-npc-text .editor {
  min-height: 150px;
  max-height: 150px;
}
.pbta.sheet.npc .sheet-header__fields {
  padding: 0px;
}

.sheet .cell--image {
  border: 1px solid var(--cell-title-border-color);
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hc2tzLXNoZWV0cy5zY3NzIiwibWFza3Mtc2hlZXRzLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFOzs7OztHQUFBO0VBTUEsNkJBQUE7RUFDQSwrQkFBQTtFQUVBLCtCQUFBO0VBQ0EscUNBQUE7RUFDQSwrQ0FBQTtFQUNBLDBCQUFBO0VBRUEsNEJBQUE7RUFDQSw4QkFBQTtFQUVBLHdDQUFBO0VBQ0Esa0RBQUE7RUFFQSxzQ0FBQTtFQUVBLHVDQUFBO0VBRUEsa0NBQUE7RUFFQTt5QkFBQTtFQUVBLGlDQUFBO0FDTkY7O0FEU0E7RUFDRSxrQ0FBQTtBQ05GOztBRFNBO0VBQ0UsNkNBQUE7QUNORjs7QURVRTtFQUNFLG1CQUFBO0FDUEo7QURVRTtFQUNFLHdDQUFBO0VBQ0EsOENBQUE7RUFDQSwyQkFBQTtFQUNBLHFCQUFBO0FDUko7QURXRTtFQUNFLHlDQUFBO0FDVEo7QURZRTtFQUNFLDBCQUFBO0VBQ0EsZ0RBQUE7QUNWSjtBRHNDRTtFQUNFLGlDQUFBO0VBQ0Esa0NBQUE7RUFDQSxnQkFBQTtBQ3BDSjtBRHdDSTtFQUNFLGlDQUFBO0VBQ0Esa0NBQUE7RUFDQSxnQkFBQTtBQ3RDTjtBRG1ERTtFQUNFLGtCQUFBO0VBQ0EsV0FBQTtBQ2pESjtBRDJFSTtFQUNFLGVBQUE7RUFDQSxrQkFBQTtFQUNBLHVDQUFBO0VBQ0Esa0NBQUE7RUFDQSxpQkFBQTtFQUNBLFNBQUE7RUFDQSxjQUFBO0VBQ0EsV0FBQTtBQ3pFTjtBRDhLSTtFQUNFLFlBQUE7RUFDQSxpQkFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0FDNUtOO0FEK0tJO0VBQ0UsZ0NBQUE7RUFDQSxpQkFBQTtFQUNBLDBCQUFBO0VBQ0Esa0JBQUE7QUM3S047QUQrS007RUFDRSx3Q0FBQTtFQUNBLGdDQUFBO0VBQ0Esa0JBQUE7QUM3S1I7QURnTE07RUFFRSxxRkFBQTtFQUNBLHdCQUFBO0FDL0tSO0FEa0xNO0VBRUUsbUZBQUE7RUFDQSx3QkFBQTtBQ2pMUjtBRHVNRTtFQUNFLGtCQUFBO0FDck1KO0FEdU1JO0VBQ0UsdUNBQUE7RUFDQSxnQ0FBQTtBQ3JNTjtBRHVNTTtFQUNFLGdDQUFBO0FDck1SO0FEd01NO0VBQ0UsNkNBQUE7QUN0TVI7QUQ2TUU7Ozs7O0VBS0UsZ0JBQUE7QUMzTUo7QUQ4TUU7RUFDRSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7RUFDQSxtQkFBQTtFQUNBLGtDQUFBO0VBQ0EsdUJBQUE7RUFDQSxlQUFBO0FDNU1KO0FEOE1JO0VBRUUsV0FBQTtFQUNBLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLE1BQUE7RUFDQSxXQUFBO0VBQ0EsV0FBQTtFQUNBLGdEQUFBO0VBQ0EsZ0NBQUE7RUFBQSw0QkFBQTtFQUFBLHdCQUFBO0FDN01OO0FEZ05JO0VBRUUsV0FBQTtFQUNBLGtCQUFBO0VBQ0EsT0FBQTtFQUNBLE1BQUE7RUFDQSxZQUFBO0VBQ0EsVUFBQTtFQUNBLGdEQUFBO0VBQ0EsZ0NBQUE7RUFBQSw0QkFBQTtFQUFBLHdCQUFBO0FDL01OO0FEbU5FO0VBQ0UsaURBQUE7QUNqTko7QURvTkU7RUFDRSwyQkFBQTtFQUNBLDRCQUFBO0VBQ0Esa0JBQUE7RUFDQSw2Q0FBQTtFQUNBLGdDQUFBO0FDbE5KO0FEb05JO0VBRUUsNENBQUE7RUFDQSxrQ0FBQTtBQ25OTjtBRHNOSTtFQUVFLG1EQUFBO0VBQ0EsZ0NBQUE7RUFDQSxpQkFBQTtBQ3JOTjtBRHlORTtFQUNFLHVDQUFBO0VBQ0EsZ0NBQUE7RUFDQSxVQUFBO0FDdk5KO0FEeU5JO0VBQ0UsVUFBQTtFQUNBLDZDQUFBO0FDdk5OOztBRDZOQSxXQUFBO0FBRUU7RUFDRSxrQkFBQTtBQzNOSjtBRDhORTtFQUNFLG1CQUFBO0VBQ0EsZ0RBQUE7QUM1Tko7QUQ4Tkk7RUFDRSxtQkFBQTtBQzVOTjtBRDZOTTtFQUNFLGlCQUFBO0VBQ0EsaUJBQUE7QUMzTlI7QURnT0U7RUFDRSxZQUFBO0FDOU5KOztBRHFQQTtFQUNFLGdEQUFBO0FDbFBGIiwiZmlsZSI6Im1hc2tzLXNoZWV0cy5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6cm9vdCB7XG4gIC0tYWN0b3ItZ3JhZGllbnQ6IGxpbmVhci1ncmFkaWVudChcbiAgICB0byBib3R0b20sXG4gICAgIzMxNzljZCAwJSxcbiAgICAjOWNiMWE1IDgwJSxcbiAgICAjZmZlYjk4IDEwMCVcbiAgKTtcbiAgLS1wcmltYXJ5LXRleHQtY29sb3I6ICNmZmZmZmY7XG4gIC0tc2Vjb25kYXJ5LXRleHQtY29sb3I6ICMwMDAwMDA7XG5cbiAgLS1pbnRlcmFjdGl2ZS1iZy1jb2xvcjogIzFlNTI4ZjtcbiAgLS1pbnRlcmFjdGl2ZS1iZy1ob3Zlci1jb2xvcjogIzE3M2Y2ZTtcbiAgLS1zdGF0cy1zZWNvbmRhcnktYmctY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yNSk7XG4gIC0tb3B0aW9uLWJnLWNvbG9yOiAjNjgzYjQ3O1xuXG4gIC0tdGFicy1ib3JkZXItY29sb3I6ICNmZmViOTg7XG4gIC0tdGFiLWJnLWFjdGl2ZS1jb2xvcjogI2ZmZWI5ODtcblxuICAtLWlucHV0LWJnLWNvbG9yOiByZ2IoMjU1IDI1NSAyNTUgLyAzNiUpO1xuICAtLXRveC1lZGl0LWFyZWEtYmctY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTtcblxuICAtLXJlc291cmNlLW1hc2tzLWJvcmRlci1jb2xvcjogI2JjYzhkZTtcblxuICAtLWN1c3RvbS1yZXNvdXJjZS1ib3JkZXItY29sb3I6ICNmZmZmZmY7XG5cbiAgLS1jZWxsLXRpdGxlLWJvcmRlci1jb2xvcjogI2IwYzRkZTtcblxuICAtLXdpbmRvdy1iZy1pbWFnZTogdXJsKFwiL21vZHVsZXMvbWFza3MtbmV3Z2VuZXJhdGlvbi1zaGVldHMvYXNzZXRzL3NreWxpbmUtb2xkLndlYnBcIiksXG4gICAgdmFyKC0tYWN0b3ItZ3JhZGllbnQpO1xuICAtLXdpbmRvdy1iZy1wb3NpdGlvbjogYm90dG9tIGxlZnQ7XG59XG5cbi5wYnRhLndpbmRvdy1hcHAgLndpbmRvdy1jb250ZW50IHtcbiAgY29sb3I6IHZhcigtLXNlY29uZGFyeS10ZXh0LWNvbG9yKTtcbn1cblxuLnZ0dCAucGJ0YSAud2luZG93LWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWludGVyYWN0aXZlLWJnLWNvbG9yKTtcbn1cblxuLnBidGEuc2hlZXQge1xuICBsYWJlbCB7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgfVxuXG4gIC53aW5kb3ctY29udGVudCB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdmFyKC0td2luZG93LWJnLWltYWdlKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB2YXIoLS13aW5kb3ctYmctcG9zaXRpb24pO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGF1dG87XG4gIH1cblxuICAudG94LnRveC10aW55bWNlIC50b3gtZWRpdC1hcmVhX19pZnJhbWUge1xuICAgIGJhY2tncm91bmQ6IHZhcigtLXRveC1lZGl0LWFyZWEtYmctY29sb3IpO1xuICB9XG5cbiAgLnNoZWV0LWhlYWRlcl9fZmllbGRzIHtcbiAgICBncmlkLWNvbHVtbjogc3BhbiAzIC8gc3BhbiAzO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsIG1pbm1heCgwLCAxZnIpKTtcbiAgfVxuXG4gIC8vIC5jZWxsLS1jdXN0b20gLmNlbGxfX3RpdGxlIC5pdGVtLWdyb3VwLWxhYmVsLFxuICAvLyAuY2VsbC0taW5mbHVlbmNlcyAuY2VsbF9fdGl0bGUgLml0ZW0tZ3JvdXAtbGFiZWwge1xuICAvLyAgIGN1cnNvcjogcG9pbnRlcjtcbiAgLy8gfVxuICBcbiAgLy8gLmNlbGwtLWN1c3RvbSAuaXRlbS1kZXRhaWxzLXRvZ2dsZSxcbiAgLy8gLmNlbGwtLWluZmx1ZW5jZXMgLml0ZW0tZGV0YWlscy10b2dnbGUge1xuICAvLyAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgLy8gICB3aWR0aDogMjRweDtcbiAgLy8gICBoZWlnaHQ6IDE2cHg7XG4gIC8vICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAvLyAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgLy8gICB0cmFuc2l0aW9uOiBhbGwgZWFzZS1pbi1vdXQgMC4yNXM7XG4gIC8vIH1cblxuICAvLyAuY2VsbC0tY3VzdG9tIC5mYXMsXG4gIC8vIC5jZWxsLS1pbmZsdWVuY2VzIC5mYXMge1xuICAvLyAgIHRyYW5zaXRpb246IGFsbCBlYXNlLWluLW91dCAwLjI1cztcbiAgLy8gfVxuICBcbiAgLy8gLmNlbGwtLWN1c3RvbSAub3BlbiAuZmFzLFxuICAvLyAuY2VsbC0taW5mbHVlbmNlcyAub3BlbiAuZmFzIHtcbiAgLy8gICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xuICAvLyB9XG5cbiAgLmVkaXRvci1jb250ZW50IHtcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1pbnB1dC1iZy1jb2xvcik7XG4gICAgY29sb3I6IHZhcigtLXNlY29uZGFyeS10ZXh0LWNvbG9yKTtcbiAgICBtaW4taGVpZ2h0OiAzMXB4O1xuICB9XG5cbiAgLnNoZWV0LXdyYXBwZXIge1xuICAgIC5lZGl0b3ItY29udGVudCB7XG4gICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1pbnB1dC1iZy1jb2xvcik7XG4gICAgICBjb2xvcjogdmFyKC0tc2Vjb25kYXJ5LXRleHQtY29sb3IpO1xuICAgICAgbWluLWhlaWdodDogMzFweDtcbiAgICB9XG5cbiAgICAvLyAuc2hlZXQtYm90dG9tIC5jZWxsLmNlbGwtLWJpbyB7XG4gICAgLy8gICBtaW4taGVpZ2h0OiAxNzVweDtcbiAgICAvLyAgIG1hcmdpbi1ib3R0b206IDVweDtcblxuICAgIC8vICAgLmVkaXRvciB7XG4gICAgLy8gICAgIG1pbi1oZWlnaHQ6IGNhbGMoMTAwJSAtIDQwcHgpO1xuICAgIC8vICAgfVxuICAgIC8vIH1cbiAgfVxuXG4gIC5jZWxsX193cmFwcGVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgd2lkdGg6IDEwMCU7XG5cbiAgICAvLyAmID4gYnV0dG9uLnJlc291cmNlLW1hc2tzIHtcbiAgICAvLyAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAvLyAgIHRvcDogMDtcbiAgICAvLyAgIGJvdHRvbTogMDtcbiAgICAvLyAgIHdpZHRoOiAyMHB4O1xuICAgIC8vICAgaGVpZ2h0OiAyMHB4O1xuICAgIC8vICAgZm9udC1zaXplOiAxNnB4O1xuICAgIC8vICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgLy8gICBwYWRkaW5nOiAwO1xuICAgIC8vICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgLy8gICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgLy8gICBtYXJnaW46IGF1dG87XG4gICAgLy8gICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1yZXNvdXJjZS1tYXNrcy1ib3JkZXItY29sb3IpO1xuICAgIC8vICAgY29sb3I6IHZhcigtLXNlY29uZGFyeS10ZXh0LWNvbG9yKTtcblxuICAgIC8vICAgJi5yZXNvdXJjZS1pbmNyZWFzZSB7XG4gICAgLy8gICAgIHJpZ2h0OiA1cHg7XG4gICAgLy8gICB9XG5cbiAgICAvLyAgICYucmVzb3VyY2UtZGVjcmVhc2Uge1xuICAgIC8vICAgICBsZWZ0OiA1cHg7XG4gICAgLy8gICB9XG4gICAgLy8gfVxuICAgIFxuICAgICYgPiBpbnB1dFt0eXBlPVwibnVtYmVyXCJdIHtcbiAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWlucHV0LWJnLWNvbG9yKTtcbiAgICAgIGNvbG9yOiB2YXIoLS1zZWNvbmRhcnktdGV4dC1jb2xvcik7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuICB9XG5cbiAgLy8gLmluZmx1ZW5jZXMge1xuICAvLyAgIC5pbmZsdWVuY2UtbmFtZSB7XG4gIC8vICAgICBmbGV4OiA0O1xuICAvLyAgIH1cblxuICAvLyAgIGlucHV0LmluZmx1ZW5jZS0tbmFtZSB7XG4gIC8vICAgICB3aWR0aDogY2FsYygxMDAlIC0gMzZweCk7XG4gIC8vICAgICBmb250LXNpemU6IDE4cHg7XG4gIC8vICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAvLyAgICAgaGVpZ2h0OiAzMnB4O1xuICAvLyAgICAgbWFyZ2luOiAwcHggMHB4IDhweCAwcHg7XG4gIC8vICAgfVxuXG4gIC8vICAgLmluZmx1ZW5jZS1tYW5hZ2VtZW50IHtcbiAgLy8gICAgIG1hcmdpbjogMHB4IDBweCA4cHggMHB4O1xuICAvLyAgICAgZGlzcGxheTogZmxleDtcbiAgLy8gICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIC8vICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIC8vICAgICBmbGV4OiA0O1xuXG4gIC8vICAgICAuaW5mbHVlbmNlLWRpc2FibGVkIHtcbiAgLy8gICAgICAgZmlsdGVyOiBvcGFjaXR5KDAuNSk7XG4gIC8vICAgICB9XG4gIC8vICAgfVxuICAgIFxuICAvLyAgIGltZy5pbmZsdWVuY2UtaWNvbiB7XG4gIC8vICAgICBmbGV4OiAxO1xuICAvLyAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgLy8gICAgIGJvcmRlcjogMDtcbiAgLy8gICAgIGhlaWdodDogMzJweDtcbiAgLy8gICAgIHdpZHRoOiAzMnB4O1xuICAvLyAgICAgcGFkZGluZzogMDtcbiAgLy8gICAgIG1hcmdpbjogMDtcbiAgLy8gICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gIC8vICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIC8vICAgfVxuICAvLyB9XG5cbiAgLy8gJlxuICAvLyAuaW5mbHVlbmNlc1xuICAvLyAuaW5mbHVlbmNlLW1hbmFnZW1lbnRcbiAgLy8gLmluZmx1ZW5jZS1jb250cm9sLmluZmx1ZW5jZS1kZWxldGUsXG4gIC8vICZcbiAgLy8gLmluZmx1ZW5jZXNcbiAgLy8gLmluZmx1ZW5jZS1tYW5hZ2VtZW50XG4gIC8vIC5pbmZsdWVuY2UtY29udHJvbC5pbmZsdWVuY2UtbG9jayxcbiAgLy8gJlxuICAvLyAuaW5mbHVlbmNlc1xuICAvLyAuaW5mbHVlbmNlLW1hbmFnZW1lbnRcbiAgLy8gLmluZmx1ZW5jZS1jb250cm9sLmluZmx1ZW5jZS11bmxvY2sge1xuICAvLyAgIGZvbnQtc2l6ZTogMjhweDtcbiAgLy8gICBmbGV4OiAxO1xuICAvLyB9XG5cbiAgLy8gLS1cblxuICAvLyAubWFza3MtY3VzdG9tLWxpc3Qge1xuICAvLyAgIGRpc3BsYXk6IGZsZXg7XG4gIC8vICAgZmxleC13cmFwOiB3cmFwO1xuICAvLyAgIGFsaWduLWl0ZW1zOiBiYXNlbGluZTtcbiAgLy8gfVxuXG4gIC8vIC5tYXNrcy1jdXN0b20tcmVzb3VyY2Uge1xuICAvLyAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWludGVyYWN0aXZlLWJnLWNvbG9yKTtcbiAgLy8gICBjb2xvcjogdmFyKC0tcHJpbWFyeS10ZXh0LWNvbG9yKTtcbiAgLy8gICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1jdXN0b20tcmVzb3VyY2UtYm9yZGVyLWNvbG9yKTtcbiAgLy8gICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIC8vICAgcGFkZGluZzogNnB4O1xuICAvLyAgIG1hcmdpbjogNHB4O1xuXG4gIC8vICAgJiA+IGgyIHtcbiAgLy8gICAgIG1hcmdpbi10b3A6IDRweDtcbiAgLy8gICB9XG5cbiAgLy8gICAmIC5jdXN0b20tcmVzb3VyY2UtY29udHJvbCB7XG4gIC8vICAgICBmbG9hdDogcmlnaHQ7XG4gIC8vICAgICBwYWRkaW5nLWxlZnQ6IDhweDtcbiAgLy8gICB9XG5cbiAgLy8gICAmLm1hc2tzLWN1c3RvbS10ZXh0IHtcbiAgLy8gICAgIG1pbi1oZWlnaHQ6IDIwMHB4O1xuICAvLyAgICAgbWluLXdpZHRoOiAyNTBweDtcblxuICAvLyAgICAgLmVkaXRvciB7XG4gIC8vICAgICAgIG1pbi1oZWlnaHQ6IDEwMHB4O1xuICAvLyAgICAgfVxuICAvLyAgIH1cbiAgICBcbiAgLy8gICAmLm1hc2tzLWN1c3RvbS10b2dnbGUgZGl2IHtcbiAgLy8gICAgIHdpZHRoOiAxMDAlO1xuICAvLyAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAvLyAgIH1cbiAgLy8gfVxuXG4gIC8vIC0tXG5cbiAgLm1hc2tzLWxhYmVsLXNoaWZ0IHtcbiAgICBpbWcge1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgbWFyZ2luLXJpZ2h0OiA0cHg7XG4gICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgICB3aWR0aDogMjBweDtcbiAgICB9XG5cbiAgICBzZWxlY3Qge1xuICAgICAgY29sb3I6IHZhcigtLXByaW1hcnktdGV4dC1jb2xvcik7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIG1heC13aWR0aDogY2FsYyg1MCUgLSAycHgpO1xuICAgICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuXG4gICAgICBvcHRpb24ge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1vcHRpb24tYmctY29sb3IpO1xuICAgICAgICBjb2xvcjogdmFyKC0tcHJpbWFyeS10ZXh0LWNvbG9yKTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMHB4O1xuICAgICAgfVxuXG4gICAgICAmLm1hc2tzLXNoaWZ0LWRvd24ge1xuICAgICAgICAvLyBUT0RPIHRoZXNlIFVSTHMgZG9udCB3b3JrXG4gICAgICAgIGJhY2tncm91bmQ6IHVybChcIi9pY29ucy9zdmcvZG93bi5zdmdcIikgbm8tcmVwZWF0IC0xMCUgdmFyKC0tc3RhdHMtc2Vjb25kYXJ5LWJnLWNvbG9yKTtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAgICAgfVxuICAgICAgXG4gICAgICAmLm1hc2tzLXNoaWZ0LXVwIHtcbiAgICAgICAgLy8gVE9ETyB0aGVzZSBVUkxzIGRvbnQgd29ya1xuICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoXCIvaWNvbnMvc3ZnL3VwLnN2Z1wiKSBuby1yZXBlYXQgLTEwJSB2YXIoLS1zdGF0cy1zZWNvbmRhcnktYmctY29sb3IpO1xuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gJlxuICAvLyAubWFza3MtY3VzdG9tLXJlc291cmNlXG4gIC8vIC5jdXN0b20tcmVzb3VyY2UtY29udHJvbFxuICAvLyBhLmN1c3RvbS1jb250cm9sIHtcbiAgLy8gICBwYWRkaW5nLWxlZnQ6IDhweDtcbiAgLy8gfVxuXG4gIC8vICZcbiAgLy8gLm1hc2tzLWN1c3RvbS1yZXNvdXJjZS5tYXNrcy1jdXN0b20tdGV4dFxuICAvLyAuZWRpdG9yXG4gIC8vIC50b3gtZWRpdG9yLWNvbnRhaW5lciB7XG4gIC8vICAgbWluLWhlaWdodDogMjAwcHg7XG4gIC8vICAgaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7XG4gIC8vIH1cbiAgXG4gIC8vIC0tIC8qKiBOUENzICoqL1xuXG4gIC5zaGVldC1hdHRyaWJ1dGVzIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIFxuICAgIC5jZWxsLS1zdGF0cyAuc3RhdCB7XG4gICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1pbnRlcmFjdGl2ZS1iZy1jb2xvcik7XG4gICAgICBjb2xvcjogdmFyKC0tcHJpbWFyeS10ZXh0LWNvbG9yKTtcbiAgICBcbiAgICAgIC5jZWxsX190aXRsZSB7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1wcmltYXJ5LXRleHQtY29sb3IpO1xuICAgICAgfVxuXG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZDogdmFyKC0taW50ZXJhY3RpdmUtYmctaG92ZXItY29sb3IpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBcbiAgLy8gLS0gLyoqIEN1c3RvbSBTdHlsaW5nICoqL1xuXG4gIC5jZWxsLS1Mb25nVGV4dCwgXG4gIC5jZWxsLS1MaXN0TWFueSwgXG4gIC5jZWxsLS1tb3ZlcyxcbiAgLmNlbGwtLVRleHQsXG4gIC5jZWxsLS1OdW1iZXIge1xuICAgIHBhZGRpbmctdG9wOiA1cHg7XG4gIH1cbiAgXG4gIC5jZWxsX190aXRsZSB7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nLWxlZnQ6IDhweDtcbiAgICBib3JkZXItYm90dG9tOiBub25lO1xuICAgIGNvbG9yOiB2YXIoLS1zZWNvbmRhcnktdGV4dC1jb2xvcik7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMDVyZW07XG4gICAgZm9udC1zaXplOiAyMnB4O1xuXG4gICAgJjo6YmVmb3JlIHtcbiAgICAgIC8vIHotaW5kZXg6IC0xO1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGxlZnQ6IDdweDtcbiAgICAgIHRvcDogMDtcbiAgICAgIGhlaWdodDogMnB4O1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jZWxsLXRpdGxlLWJvcmRlci1jb2xvcik7XG4gICAgICB0cmFuc2Zvcm06IHNrZXdYKC0xNWRlZyk7XG4gICAgfVxuXG4gICAgJjo6YWZ0ZXIge1xuICAgICAgLy8gei1pbmRleDogLTE7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogMDtcbiAgICAgIHRvcDogMDtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIHdpZHRoOiA0cHg7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jZWxsLXRpdGxlLWJvcmRlci1jb2xvcik7XG4gICAgICB0cmFuc2Zvcm06IHNrZXdYKC0xNWRlZyk7XG4gICAgfVxuICB9XG5cbiAgLnRhYnMge1xuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCB2YXIoLS10YWJzLWJvcmRlci1jb2xvcik7XG4gIH1cblxuICAuc2hlZXQtdGFicy50YWJzID4gYS5pdGVtIHtcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA1cHg7XG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDVweDtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taW50ZXJhY3RpdmUtYmctY29sb3IpO1xuICAgIGNvbG9yOiB2YXIoLS1wcmltYXJ5LXRleHQtY29sb3IpO1xuXG4gICAgJi5hY3RpdmUsXG4gICAgJi5hY3RpdmU6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGFiLWJnLWFjdGl2ZS1jb2xvcik7XG4gICAgICBjb2xvcjogdmFyKC0tc2Vjb25kYXJ5LXRleHQtY29sb3IpO1xuICAgIH1cblxuICAgICY6aG92ZXIsXG4gICAgJjpmb2N1cyB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pbnRlcmFjdGl2ZS1iZy1ob3Zlci1jb2xvcik7XG4gICAgICBjb2xvcjogdmFyKC0tcHJpbWFyeS10ZXh0LWNvbG9yKTtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIH1cbiAgfVxuXG4gIC5zaGVldC1oZWFkZXJfX2ZpZWxkcyAudmlldy1wbGF5Ym9vayB7XG4gICAgYmFja2dyb3VuZDogdmFyKC0taW50ZXJhY3RpdmUtYmctY29sb3IpO1xuICAgIGNvbG9yOiB2YXIoLS1wcmltYXJ5LXRleHQtY29sb3IpO1xuICAgIG9wYWNpdHk6IDE7XG4gIFxuICAgICY6aG92ZXIge1xuICAgICAgb3BhY2l0eTogMTtcbiAgICAgIGJhY2tncm91bmQ6IHZhcigtLWludGVyYWN0aXZlLWJnLWhvdmVyLWNvbG9yKTtcbiAgICB9XG4gIH1cblxufVxuXG4vKiogTlBDcyAqKi9cbi5wYnRhLnNoZWV0Lm5wYyB7XG4gIC5zaGVldC13cmFwcGVyIC5zaGVldC1oZWFkZXIge1xuICAgIG1hcmdpbi1ib3R0b206IDBweDtcbiAgfVxuICBcbiAgLnNoZWV0LWF0dHJpYnV0ZXMge1xuICAgIGdyaWQtY29sdW1uOiBzcGFuIDU7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNSwgbWlubWF4KDAsIDFmcikpO1xuXG4gICAgLmNlbGwtbnBjLXRleHQge1xuICAgICAgZ3JpZC1jb2x1bW46IHNwYW4gMjtcbiAgICAgIC5lZGl0b3Ige1xuICAgICAgICBtaW4taGVpZ2h0OiAxNTBweDtcbiAgICAgICAgbWF4LWhlaWdodDogMTUwcHg7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJiAuc2hlZXQtaGVhZGVyX19maWVsZHMge1xuICAgIHBhZGRpbmc6IDBweDtcbiAgfVxuXG4gIC8vICZcbiAgLy8gLmNlbGwtLWFlc3RoZXRpY3NcbiAgLy8gLmNlbGwtLWNvbmRpdGlvbnNcbiAgLy8gdWwuY2VsbF9fY2hlY2tib3hlc1xuICAvLyBsYWJlbCB7XG4gIC8vICAgZGlzcGxheTogZmxleDtcbiAgLy8gICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAvLyB9XG5cblxuICAvLyAmXG4gIC8vIC5zaGVldC1hdHRyaWJ1dGVzXG4gIC8vIC5jZWxsLW5wYy10ZXh0XG4gIC8vIC5lZGl0b3JcbiAgLy8gLnRveC1lZGl0b3ItY29udGFpbmVyIHtcbiAgLy8gICBtaW4taGVpZ2h0OiAxNTBweDtcbiAgLy8gICBoZWlnaHQ6IDEwMCUgIWltcG9ydGFudDtcbiAgLy8gfVxufVxuXG4uc2hlZXQgLmNlbGwtLWltYWdlIHtcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tY2VsbC10aXRsZS1ib3JkZXItY29sb3IpO1xufSIsIjpyb290IHtcbiAgLS1hY3Rvci1ncmFkaWVudDogbGluZWFyLWdyYWRpZW50KFxuICAgIHRvIGJvdHRvbSxcbiAgICAjMzE3OWNkIDAlLFxuICAgICM5Y2IxYTUgODAlLFxuICAgICNmZmViOTggMTAwJVxuICApO1xuICAtLXByaW1hcnktdGV4dC1jb2xvcjogI2ZmZmZmZjtcbiAgLS1zZWNvbmRhcnktdGV4dC1jb2xvcjogIzAwMDAwMDtcbiAgLS1pbnRlcmFjdGl2ZS1iZy1jb2xvcjogIzFlNTI4ZjtcbiAgLS1pbnRlcmFjdGl2ZS1iZy1ob3Zlci1jb2xvcjogIzE3M2Y2ZTtcbiAgLS1zdGF0cy1zZWNvbmRhcnktYmctY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yNSk7XG4gIC0tb3B0aW9uLWJnLWNvbG9yOiAjNjgzYjQ3O1xuICAtLXRhYnMtYm9yZGVyLWNvbG9yOiAjZmZlYjk4O1xuICAtLXRhYi1iZy1hY3RpdmUtY29sb3I6ICNmZmViOTg7XG4gIC0taW5wdXQtYmctY29sb3I6IHJnYigyNTUgMjU1IDI1NSAvIDM2JSk7XG4gIC0tdG94LWVkaXQtYXJlYS1iZy1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpO1xuICAtLXJlc291cmNlLW1hc2tzLWJvcmRlci1jb2xvcjogI2JjYzhkZTtcbiAgLS1jdXN0b20tcmVzb3VyY2UtYm9yZGVyLWNvbG9yOiAjZmZmZmZmO1xuICAtLWNlbGwtdGl0bGUtYm9yZGVyLWNvbG9yOiAjYjBjNGRlO1xuICAtLXdpbmRvdy1iZy1pbWFnZTogdXJsKFwiL21vZHVsZXMvbWFza3MtbmV3Z2VuZXJhdGlvbi1zaGVldHMvYXNzZXRzL3NreWxpbmUtb2xkLndlYnBcIiksXG4gICAgdmFyKC0tYWN0b3ItZ3JhZGllbnQpO1xuICAtLXdpbmRvdy1iZy1wb3NpdGlvbjogYm90dG9tIGxlZnQ7XG59XG5cbi5wYnRhLndpbmRvdy1hcHAgLndpbmRvdy1jb250ZW50IHtcbiAgY29sb3I6IHZhcigtLXNlY29uZGFyeS10ZXh0LWNvbG9yKTtcbn1cblxuLnZ0dCAucGJ0YSAud2luZG93LWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWludGVyYWN0aXZlLWJnLWNvbG9yKTtcbn1cblxuLnBidGEuc2hlZXQgbGFiZWwge1xuICBmb250LXdlaWdodDogbm9ybWFsO1xufVxuLnBidGEuc2hlZXQgLndpbmRvdy1jb250ZW50IHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdmFyKC0td2luZG93LWJnLWltYWdlKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdmFyKC0td2luZG93LWJnLXBvc2l0aW9uKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xuICBiYWNrZ3JvdW5kLXNpemU6IGF1dG87XG59XG4ucGJ0YS5zaGVldCAudG94LnRveC10aW55bWNlIC50b3gtZWRpdC1hcmVhX19pZnJhbWUge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS10b3gtZWRpdC1hcmVhLWJnLWNvbG9yKTtcbn1cbi5wYnRhLnNoZWV0IC5zaGVldC1oZWFkZXJfX2ZpZWxkcyB7XG4gIGdyaWQtY29sdW1uOiBzcGFuIDMvc3BhbiAzO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCBtaW5tYXgoMCwgMWZyKSk7XG59XG4ucGJ0YS5zaGVldCAuZWRpdG9yLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1pbnB1dC1iZy1jb2xvcik7XG4gIGNvbG9yOiB2YXIoLS1zZWNvbmRhcnktdGV4dC1jb2xvcik7XG4gIG1pbi1oZWlnaHQ6IDMxcHg7XG59XG4ucGJ0YS5zaGVldCAuc2hlZXQtd3JhcHBlciAuZWRpdG9yLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1pbnB1dC1iZy1jb2xvcik7XG4gIGNvbG9yOiB2YXIoLS1zZWNvbmRhcnktdGV4dC1jb2xvcik7XG4gIG1pbi1oZWlnaHQ6IDMxcHg7XG59XG4ucGJ0YS5zaGVldCAuY2VsbF9fd3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG59XG4ucGJ0YS5zaGVldCAuY2VsbF9fd3JhcHBlciA+IGlucHV0W3R5cGU9bnVtYmVyXSB7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pbnB1dC1iZy1jb2xvcik7XG4gIGNvbG9yOiB2YXIoLS1zZWNvbmRhcnktdGV4dC1jb2xvcik7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBtYXJnaW46IDA7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbn1cbi5wYnRhLnNoZWV0IC5tYXNrcy1sYWJlbC1zaGlmdCBpbWcge1xuICBib3JkZXI6IG5vbmU7XG4gIG1hcmdpbi1yaWdodDogNHB4O1xuICBoZWlnaHQ6IDIwcHg7XG4gIHdpZHRoOiAyMHB4O1xufVxuLnBidGEuc2hlZXQgLm1hc2tzLWxhYmVsLXNoaWZ0IHNlbGVjdCB7XG4gIGNvbG9yOiB2YXIoLS1wcmltYXJ5LXRleHQtY29sb3IpO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbWF4LXdpZHRoOiBjYWxjKDUwJSAtIDJweCk7XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbn1cbi5wYnRhLnNoZWV0IC5tYXNrcy1sYWJlbC1zaGlmdCBzZWxlY3Qgb3B0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tb3B0aW9uLWJnLWNvbG9yKTtcbiAgY29sb3I6IHZhcigtLXByaW1hcnktdGV4dC1jb2xvcik7XG4gIGJvcmRlci1yYWRpdXM6IDBweDtcbn1cbi5wYnRhLnNoZWV0IC5tYXNrcy1sYWJlbC1zaGlmdCBzZWxlY3QubWFza3Mtc2hpZnQtZG93biB7XG4gIGJhY2tncm91bmQ6IHVybChcIi9pY29ucy9zdmcvZG93bi5zdmdcIikgbm8tcmVwZWF0IC0xMCUgdmFyKC0tc3RhdHMtc2Vjb25kYXJ5LWJnLWNvbG9yKTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xufVxuLnBidGEuc2hlZXQgLm1hc2tzLWxhYmVsLXNoaWZ0IHNlbGVjdC5tYXNrcy1zaGlmdC11cCB7XG4gIGJhY2tncm91bmQ6IHVybChcIi9pY29ucy9zdmcvdXAuc3ZnXCIpIG5vLXJlcGVhdCAtMTAlIHZhcigtLXN0YXRzLXNlY29uZGFyeS1iZy1jb2xvcik7XG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbn1cbi5wYnRhLnNoZWV0IC5zaGVldC1hdHRyaWJ1dGVzIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLnBidGEuc2hlZXQgLnNoZWV0LWF0dHJpYnV0ZXMgLmNlbGwtLXN0YXRzIC5zdGF0IHtcbiAgYmFja2dyb3VuZDogdmFyKC0taW50ZXJhY3RpdmUtYmctY29sb3IpO1xuICBjb2xvcjogdmFyKC0tcHJpbWFyeS10ZXh0LWNvbG9yKTtcbn1cbi5wYnRhLnNoZWV0IC5zaGVldC1hdHRyaWJ1dGVzIC5jZWxsLS1zdGF0cyAuc3RhdCAuY2VsbF9fdGl0bGUge1xuICBjb2xvcjogdmFyKC0tcHJpbWFyeS10ZXh0LWNvbG9yKTtcbn1cbi5wYnRhLnNoZWV0IC5zaGVldC1hdHRyaWJ1dGVzIC5jZWxsLS1zdGF0cyAuc3RhdDpob3ZlciB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWludGVyYWN0aXZlLWJnLWhvdmVyLWNvbG9yKTtcbn1cbi5wYnRhLnNoZWV0IC5jZWxsLS1Mb25nVGV4dCxcbi5wYnRhLnNoZWV0IC5jZWxsLS1MaXN0TWFueSxcbi5wYnRhLnNoZWV0IC5jZWxsLS1tb3Zlcyxcbi5wYnRhLnNoZWV0IC5jZWxsLS1UZXh0LFxuLnBidGEuc2hlZXQgLmNlbGwtLU51bWJlciB7XG4gIHBhZGRpbmctdG9wOiA1cHg7XG59XG4ucGJ0YS5zaGVldCAuY2VsbF9fdGl0bGUge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy1sZWZ0OiA4cHg7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIGNvbG9yOiB2YXIoLS1zZWNvbmRhcnktdGV4dC1jb2xvcik7XG4gIGxldHRlci1zcGFjaW5nOiAwLjA1cmVtO1xuICBmb250LXNpemU6IDIycHg7XG59XG4ucGJ0YS5zaGVldCAuY2VsbF9fdGl0bGU6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogN3B4O1xuICB0b3A6IDA7XG4gIGhlaWdodDogMnB4O1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY2VsbC10aXRsZS1ib3JkZXItY29sb3IpO1xuICB0cmFuc2Zvcm06IHNrZXdYKC0xNWRlZyk7XG59XG4ucGJ0YS5zaGVldCAuY2VsbF9fdGl0bGU6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDRweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY2VsbC10aXRsZS1ib3JkZXItY29sb3IpO1xuICB0cmFuc2Zvcm06IHNrZXdYKC0xNWRlZyk7XG59XG4ucGJ0YS5zaGVldCAudGFicyB7XG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCB2YXIoLS10YWJzLWJvcmRlci1jb2xvcik7XG59XG4ucGJ0YS5zaGVldCAuc2hlZXQtdGFicy50YWJzID4gYS5pdGVtIHtcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogNXB4O1xuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNXB4O1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWludGVyYWN0aXZlLWJnLWNvbG9yKTtcbiAgY29sb3I6IHZhcigtLXByaW1hcnktdGV4dC1jb2xvcik7XG59XG4ucGJ0YS5zaGVldCAuc2hlZXQtdGFicy50YWJzID4gYS5pdGVtLmFjdGl2ZSwgLnBidGEuc2hlZXQgLnNoZWV0LXRhYnMudGFicyA+IGEuaXRlbS5hY3RpdmU6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10YWItYmctYWN0aXZlLWNvbG9yKTtcbiAgY29sb3I6IHZhcigtLXNlY29uZGFyeS10ZXh0LWNvbG9yKTtcbn1cbi5wYnRhLnNoZWV0IC5zaGVldC10YWJzLnRhYnMgPiBhLml0ZW06aG92ZXIsIC5wYnRhLnNoZWV0IC5zaGVldC10YWJzLnRhYnMgPiBhLml0ZW06Zm9jdXMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pbnRlcmFjdGl2ZS1iZy1ob3Zlci1jb2xvcik7XG4gIGNvbG9yOiB2YXIoLS1wcmltYXJ5LXRleHQtY29sb3IpO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5wYnRhLnNoZWV0IC5zaGVldC1oZWFkZXJfX2ZpZWxkcyAudmlldy1wbGF5Ym9vayB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWludGVyYWN0aXZlLWJnLWNvbG9yKTtcbiAgY29sb3I6IHZhcigtLXByaW1hcnktdGV4dC1jb2xvcik7XG4gIG9wYWNpdHk6IDE7XG59XG4ucGJ0YS5zaGVldCAuc2hlZXQtaGVhZGVyX19maWVsZHMgLnZpZXctcGxheWJvb2s6aG92ZXIge1xuICBvcGFjaXR5OiAxO1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1pbnRlcmFjdGl2ZS1iZy1ob3Zlci1jb2xvcik7XG59XG5cbi8qKiBOUENzICoqL1xuLnBidGEuc2hlZXQubnBjIC5zaGVldC13cmFwcGVyIC5zaGVldC1oZWFkZXIge1xuICBtYXJnaW4tYm90dG9tOiAwcHg7XG59XG4ucGJ0YS5zaGVldC5ucGMgLnNoZWV0LWF0dHJpYnV0ZXMge1xuICBncmlkLWNvbHVtbjogc3BhbiA1O1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg1LCBtaW5tYXgoMCwgMWZyKSk7XG59XG4ucGJ0YS5zaGVldC5ucGMgLnNoZWV0LWF0dHJpYnV0ZXMgLmNlbGwtbnBjLXRleHQge1xuICBncmlkLWNvbHVtbjogc3BhbiAyO1xufVxuLnBidGEuc2hlZXQubnBjIC5zaGVldC1hdHRyaWJ1dGVzIC5jZWxsLW5wYy10ZXh0IC5lZGl0b3Ige1xuICBtaW4taGVpZ2h0OiAxNTBweDtcbiAgbWF4LWhlaWdodDogMTUwcHg7XG59XG4ucGJ0YS5zaGVldC5ucGMgLnNoZWV0LWhlYWRlcl9fZmllbGRzIHtcbiAgcGFkZGluZzogMHB4O1xufVxuXG4uc2hlZXQgLmNlbGwtLWltYWdlIHtcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tY2VsbC10aXRsZS1ib3JkZXItY29sb3IpO1xufSJdfQ== */
